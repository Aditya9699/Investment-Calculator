{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Investment-Calculator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Form from './Components/Form';\nimport Header from './Components/Header';\nimport Table from './Components/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  const [userInput, setUserInput] = useState(null);\n  const calculateHandler = userInput => {\n    setUserInput(userInput);\n  };\n  const yearlyData = [];\n  if (userInput) {\n    let currentSavings = userInput['current-savings'];\n    const yearlyContribution = userInput['yearly-contribution'];\n    const expectedReturn = userInput['expected-return'] / 100;\n    const duration = userInput['duration'];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      if (currentSavings === 0) {\n        currentSavings = yearlyContribution;\n      } else {\n        currentSavings += yearlyContribution;\n      }\n      const yearlyInterest = currentSavings * expectedReturn;\n      if (currentSavings === yearlyContribution) {\n        currentSavings = 0;\n      } else {\n        currentSavings = props.initialUserIn;\n      }\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onCalculate: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), !userInput && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-value\",\n      children: \"No investment calculated yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 22\n    }, this), userInput && /*#__PURE__*/_jsxDEV(Table, {\n      data: yearlyData,\n      initialInvestment: userInput['current-savings']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nCOotz9vTgzH/m310d2/03oFEtk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Form","Header","Table","jsxDEV","_jsxDEV","App","props","_s","userInput","setUserInput","calculateHandler","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","initialUserIn","push","year","savingsEndOfYear","children","fileName","_jsxFileName","lineNumber","columnNumber","onCalculate","className","data","initialInvestment","_c","$RefreshReg$"],"sources":["C:/React/Investment-Calculator/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport Form from './Components/Form';\nimport Header from './Components/Header';\nimport Table from './Components/Table';\n\nfunction App(props) {\n  const [userInput, setUserInput] = useState(null);\n\n  const calculateHandler = (userInput) => {\n    setUserInput(userInput);\n  };\n\n  const yearlyData = [];\n\n  if (userInput) {\n    let currentSavings = userInput['current-savings'];\n    const yearlyContribution = userInput['yearly-contribution'];\n    const expectedReturn = userInput['expected-return'] / 100;\n    const duration = userInput['duration'];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      if(currentSavings === 0){\n        currentSavings = yearlyContribution;\n      }else{\n        currentSavings += yearlyContribution;\n      }\n      const yearlyInterest = currentSavings * expectedReturn;\n      if(currentSavings === yearlyContribution){\n        currentSavings = 0;\n      }else {\n        currentSavings = props.initialUserIn;\n      }\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      });\n    }\n  }\n\n  return (\n    <div>\n      <Header></Header>\n      <Form onCalculate={calculateHandler}></Form>\n      {!userInput && <p className='no-value'>No investment calculated yet.</p>}\n      {userInput && <Table data={yearlyData} initialInvestment={userInput['current-savings']}/>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,GAAGA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAClB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMW,gBAAgB,GAAIF,SAAS,IAAK;IACtCC,YAAY,CAACD,SAAS,CAAC;EACzB,CAAC;EAED,MAAMG,UAAU,GAAG,EAAE;EAErB,IAAIH,SAAS,EAAE;IACb,IAAII,cAAc,GAAGJ,SAAS,CAAC,iBAAiB,CAAC;IACjD,MAAMK,kBAAkB,GAAGL,SAAS,CAAC,qBAAqB,CAAC;IAC3D,MAAMM,cAAc,GAAGN,SAAS,CAAC,iBAAiB,CAAC,GAAG,GAAG;IACzD,MAAMO,QAAQ,GAAGP,SAAS,CAAC,UAAU,CAAC;;IAEtC;IACA,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;MACjC,IAAGJ,cAAc,KAAK,CAAC,EAAC;QACtBA,cAAc,GAAGC,kBAAkB;MACrC,CAAC,MAAI;QACHD,cAAc,IAAIC,kBAAkB;MACtC;MACA,MAAMI,cAAc,GAAGL,cAAc,GAAGE,cAAc;MACtD,IAAGF,cAAc,KAAKC,kBAAkB,EAAC;QACvCD,cAAc,GAAG,CAAC;MACpB,CAAC,MAAK;QACJA,cAAc,GAAGN,KAAK,CAACY,aAAa;MACtC;MACAN,cAAc,IAAIK,cAAc,GAAGJ,kBAAkB;MACrDF,UAAU,CAACQ,IAAI,CAAC;QACd;QACAC,IAAI,EAAEJ,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BI,gBAAgB,EAAET,cAAc;QAChCC,kBAAkB,EAAEA;MACtB,CAAC,CAAC;IACJ;EACF;EAEA,oBACET,OAAA;IAAAkB,QAAA,gBACElB,OAAA,CAACH,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eACjBtB,OAAA,CAACJ,IAAI;MAAC2B,WAAW,EAAEjB;IAAiB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAC3C,CAAClB,SAAS,iBAAIJ,OAAA;MAAGwB,SAAS,EAAC,UAAU;MAAAN,QAAA,EAAC;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACvElB,SAAS,iBAAIJ,OAAA,CAACF,KAAK;MAAC2B,IAAI,EAAElB,UAAW;MAACmB,iBAAiB,EAAEtB,SAAS,CAAC,iBAAiB;IAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtF,CAAC;AAEV;AAACnB,EAAA,CA/CQF,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}